{
  "indices.get_alias":{
    "documentation":{
      "url":"http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html",
      "description":"Returns an alias."
    },
    "url":{
      "paths":[
        {
          "path":"/_alias",
          "method":"GET"
        },
        {
          "path":"/_alias/{name}",
          "method":"GET",
          "parts":{
            "name":{
              "type":"list",
              "description":"A comma-separated list of alias names to return"
            }
          }
        },
        {
          "path":"/{index}/_alias/{name}",
          "method":"GET",
          "parts":{
            "index":{
              "type":"list",
              "description":"A comma-separated list of index names to filter aliases"
            },
            "name":{
              "type":"list",
              "description":"A comma-separated list of alias names to return"
            }
          }
        },
        {
          "path":"/{index}/_alias",
          "method":"GET",
          "parts":{
            "index":{
              "type":"list",
              "description":"A comma-separated list of index names to filter aliases"
            }
          }
        }
      ]
    },
    "params":{
      "ignore_unavailable":{
        "type":"boolean",
        "description":"Whether specified concrete indices should be ignored when unavailable (missing or closed)"
      },
      "allow_no_indices":{
        "type":"boolean",
        "description":"Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
      },
      "expand_wildcards":{
        "type":"enum",
        "options":[
          "open",
          "closed",
          "none",
          "all"
        ],
        "default":"all",
        "description":"Whether to expand wildcard expression to concrete indices that are open, closed or both."
      },
      "local":{
        "type":"boolean",
        "description":"Return local information, do not retrieve the state from master node (default: false)"
      }
    }
  }
}
